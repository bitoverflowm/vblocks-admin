// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Buyers = sequelize.define('buyers', {
    companyName: {
      type: DataTypes.STRING,
    },
    address: {
      type: DataTypes.STRING,
    },
    contactName: {
      type: DataTypes.STRING,
    },
    title: {
      type: DataTypes.STRING,
    },
    phone: {
      type: DataTypes.STRING,
    },
    signetAccount: {
      type: DataTypes.STRING,
    },
    creditLimit: {
      type: DataTypes.INTEGER,
    },
    creditAvailable: {
      type: DataTypes.INTEGER,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'Buyers',
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Buyers.associate = (models) => {
    Buyers.belongsTo(models.users, {
      foreignKey: {
        name: 'userIdKey',
        field: 'userId',
      },
      target: {
        name: 'userId',
      },
      as: 'user',
    });
    Buyers.hasMany(models.rpPs, {
      foreignKey: {
        name: 'buyerIdKey',
        field: 'buyerId',
      },
      target: {
        name: 'userId',
      },
      as: 'buyerRpPs',
    });
  };

  return Buyers;
};
